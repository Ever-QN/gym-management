@page "/edit-billing"
@using GymApplication.Data
@using System.IO
@using System.Text.Json

<h3>Billing Management</h3>

<EditForm Model="@billingModel" OnValidSubmit="SaveInvoiceToFile">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="invoiceNumber">Invoice Number:</label>
        <input type="text" value="@InvoiceNumber" readonly class="form-control" id="invoiceNumber" />
    </div>

    <div class="form-group">
        <label for="customerName">Customer Name:</label>
        <input type="text" @bind="CustomerName" class="form-control" id="customerName" />
    </div>

    <div class="form-group">
        <label for="membershipPlan">Membership Plan:</label>
        <input type="text" @bind="MembershipPlan" class="form-control" id="membershipPlan" />
    </div>

    <div class="form-group">
        <label for="amountPaid">Amount Paid:</label>
        <input type="number" @bind="AmountPaid" class="form-control" id="amountPaid" />
    </div>

    <div class="form-group">
        <label for="invoiceDate">Invoice Date:</label>
        <input type="date" @bind="InvoiceDate" class="form-control" id="invoiceDate" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private string InvoiceNumber { get; set; }
    private string CustomerName { get; set; }
    private string MembershipPlan { get; set; }
    private decimal AmountPaid { get; set; }
    private DateTime InvoiceDate { get; set; } = DateTime.Now;

    private BillingInfo billingModel = new BillingInfo();

    protected override void OnInitialized()
    {
        GenerateUniqueInvoiceNumber();
    }

    private void GenerateUniqueInvoiceNumber()
    {
        Random random = new Random();
        InvoiceNumber = random.Next(100000, 1000000).ToString();
    }

    private async Task SaveInvoiceToFile()
    {
        try
        {
            BillingInfo newBillingInfo = new BillingInfo
                {
                    InvoiceNumber = InvoiceNumber,
                    CustomerName = CustomerName,
                    MembershipPlan = MembershipPlan,
                    AmountPaid = AmountPaid,
                    InvoiceDate = InvoiceDate
                };

            string filePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "BillingInvoices.txt");

            List<BillingInfo> billingInfos = new List<BillingInfo>();
            if (File.Exists(filePath))
            {
                string existingData = await File.ReadAllTextAsync(filePath);
                billingInfos = JsonSerializer.Deserialize<List<BillingInfo>>(existingData);
            }

            billingInfos.Add(newBillingInfo);

            string serializedData = JsonSerializer.Serialize(billingInfos);
            await File.WriteAllTextAsync(filePath, serializedData);

            ResetForm();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void ResetForm()
    {
        CustomerName = "";
        MembershipPlan = "";
        AmountPaid = 0;
        InvoiceDate = DateTime.Now;
        GenerateUniqueInvoiceNumber();
    }
}
