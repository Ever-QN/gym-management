@page "/login"
@using GymApplication.Models;
@using GymApplication.Services;
@inject NavigationManager NavigationManager;
@inject AdminService adminService

<h1>Administrator Login</h1>

<EditForm Model="@loginModel" OnValidSubmit="SubmitForm">

    <DataAnnotationsValidator/>
    <div class="form-group">
        <label>Email address</label>
        <input type="email" @bind="loginModel.Email" class="form-control" placeholder="admin@example.ca" />
        <ValidationMessage For="@(()=> loginModel.Email)"/>
    </div>

    <div class="mt-2 form-group">
        <label>Password</label>
        <input type="password" @bind="loginModel.Password" class="form-control" placeholder="password">
        <ValidationMessage For="@(()=> loginModel.Password)" />
    </div>

    <div class="text-center mt-2">
        <button class="btn btn-primary" type="submit">
            <i class="oi oi-account-login"></i> Sign in
            </button>
    </div>
</EditForm>

@code {
    LoginModel loginModel = new()
        {
            Email = "admin@example.ca",
            Password = "password"
        };


    private async Task SubmitForm()
    {
        var admins = await adminService.GetAdminAsync();
        var admin = admins.FirstOrDefault(a => a.AdminEmail == loginModel.Email && a.AdminPassword == loginModel.Password);

        if (admin != null)
        {
            LoginModel.isAuthenticated = true;
            NavigationManager.NavigateTo("/dashboard");
        }
        else
        {
            LoginModel.isAuthenticated = false;
            loginModel.Password = "";
            StateHasChanged();
        }
    }
}
