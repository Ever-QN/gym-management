@page "/addupdateadmin"
@page "/updateadmin/{AdminId:int}"
@using GymApplication.Data
@using GymApplication.Services
@inject AdminService adminService
@inject NavigationManager navigationManager

<h3>Edit Admin Info</h3>

<div class="row">
	<div class="col-md-6">
		<div class="mb-3">
			<label class="form-label">Admin ID:</label>
			<input type="text" @bind="adminId" class="form-control" placeholder="Admin ID" />
		</div>
		<div class="mb-3">
			<label class="form-label">Admin Email:</label>
			<input type="text" @bind="adminEmail" class="form-control" placeholder="Admin Email" />
		</div>
		<div class="mb-3">
			<label class="form-label">Admin Password:</label>
			<input type="text" @bind="adminPassword" class="form-control" placeholder="Admin Password" />
		</div>

		<button type="submit" class="btn btn-sm btn-success" @onclick="AddAdminInfo">Submit</button>
		<button type="submit" class="btn btn-sm btn-success" @onclick="BackToList">Back</button>
	</div>
</div>

@code {
	[Parameter]
	public int AdminId { get; set; }

	private int adminId = 0;
	private string adminEmail = "";
	private string adminPassword = "";

	public async void AddAdminInfo()
	{
		var admin = new AdminInfo();
		admin.AdminId = adminId;
		admin.AdminEmail = adminEmail;
		admin.AdminPassword = adminPassword;

		var response = await adminService.AddUpdateAdminAsync(admin);
		if (response)
		{
			if (adminId == 0)
			{
				await App.Current.MainPage.DisplayAlert("Saved", "Save Successful", "OK");
			}
			else
			{
				await App.Current.MainPage.DisplayAlert("Updated", "Update Successful", "OK");
			}
		}
		else
		{
			await App.Current.MainPage.DisplayAlert("Saved", "Saved File", "OK");
		}
	}

	public void BackToList()
	{
		navigationManager.NavigateTo("adminList");
	}
}
